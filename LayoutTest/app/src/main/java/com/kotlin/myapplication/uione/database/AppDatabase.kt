package com.kotlin.myapplication.uione.databaseimport android.content.Contextimport androidx.room.Databaseimport androidx.room.Roomimport androidx.room.RoomDatabaseimport com.kotlin.myapplication.uione.dao.TagDaoimport com.kotlin.myapplication.uione.database.AppDatabase.Companion.DATABASE_VERSIONimport com.kotlin.myapplication.uione.database.AppDatabase.Companion.EXPORT_SCHEMEimport com.kotlin.myapplication.uione.model.Tag@Database(    entities = [Tag::class],    version = DATABASE_VERSION,    exportSchema = EXPORT_SCHEME)abstract class AppDatabase : RoomDatabase() {    abstract fun tagDao(): TagDao    companion object {        const val DATABASE_NAME = "test"        const val DATABASE_VERSION = 1        const val EXPORT_SCHEME = false        fun getInstance(context: Context): AppDatabase {            return Room.databaseBuilder(context, AppDatabase::class.java, DATABASE_NAME)                .allowMainThreadQueries()                .build()        }    }}