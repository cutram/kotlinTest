package com.kotlin.myapplication.uitwo.adapterimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.recyclerview.widget.RecyclerViewimport com.kotlin.myapplication.BRimport com.kotlin.myapplication.databinding.ItemSubtaskBindingimport com.kotlin.myapplication.uione.adapter.BaseAdapterimport com.kotlin.myapplication.uitwo.model.SubTaskclass SubTaskAdapter(var listener: OnSelectedListener? = null) : BaseAdapter<SubTask>(ArrayList()) {    interface OnSelectedListener {        fun onSelected(subTask: SubTask, isSelected: Boolean)    }    inner class MyViewModel(private val binding: ItemSubtaskBinding) :        RecyclerView.ViewHolder(binding.root) {        fun bind(subTask: SubTask) {            if (!subTask.isDone) {                binding.ivDone.visibility = View.GONE                binding.ivNotDone.visibility = View.VISIBLE            } else {                binding.ivDone.visibility = View.VISIBLE                binding.ivNotDone.visibility = View.GONE            }            binding.llStatus.setOnClickListener {                if (!subTask.isDone) {                    binding.ivDone.visibility = View.VISIBLE                    binding.ivNotDone.visibility = View.GONE                    subTask.isDone = true                } else {                    binding.ivNotDone.visibility = View.VISIBLE                    binding.ivDone.visibility = View.GONE                    subTask.isDone = false                }                listener?.onSelected(subTask, subTask.isDone)            }            binding.setVariable(BR.subTask, subTask)            binding.executePendingBindings()        }    }    override fun onCreateViewHolderBase(        parent: ViewGroup?,        viewType: Int    ): RecyclerView.ViewHolder {        val inflater = LayoutInflater.from(parent?.context)        val itemSubtaskBinding = ItemSubtaskBinding.inflate(inflater, parent, false)        return MyViewModel(itemSubtaskBinding)    }    override fun onBindViewHolderBase(holder: RecyclerView.ViewHolder?, position: Int) {        (holder as? MyViewModel)?.apply {            bind(list[position])        }    }}